{"version":3,"sources":["filters.js","degreeservice.js","maincontroller.js","degreedirectives.js","app.js"],"names":["DegreeSearch","Filters","RangeFilter","input","total","i","push","Services","DegreeService","$http","$location","this","http","location","apiUrl","UCF_DEGREE_SEARCH_ANGULAR","remote_path","prototype","GetDegreeResults","query","args","successCallback","errorCallback","params","search","program_types","programType","page","get","then","response","GetProgramTypes","$inject","Controllers","MainController","$scope","degreeService","_this","scope","programTypes","slug","alias","$watch","HandleInput","GetSearchResults","searchQuery","currentPage","SuccessHandler","ErrorHandler","results","data","totalResults","totalPosts","totalPages","startIndex","endIndex","angular","forEach","types","type_val","type_key","pt_val","pt_key","count","PreviousPage","NextPage","GoToPage","console","log","UpdateFilters","value","Directives","SearchFormDirective","restrict","replace","template","search_form_template","SearchResultsDirective","search_results_template","ProgramTypesDirective","program_types_template","PaginationDirective","pagination_template","ResultCountDirective","result_count_template","module","controller","service","directive","filter"],"mappings":"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","file":"ucf-degree-search-angular.min.js","sourcesContent":["var DegreeSearch;\n(function (DegreeSearch) {\n    (function (Filters) {\n        function RangeFilter() {\n            return function (input, total) {\n                total = total;\n\n                for (var i = 0; i < total; i++) {\n                    input.push(i);\n                }\n\n                return input;\n            };\n        }\n        Filters.RangeFilter = RangeFilter;\n    })(DegreeSearch.Filters || (DegreeSearch.Filters = {}));\n    var Filters = DegreeSearch.Filters;\n})(DegreeSearch || (DegreeSearch = {}));\n","var DegreeSearch;\n(function (DegreeSearch) {\n    (function (Services) {\n        var DegreeService = (function () {\n            function DegreeService($http, $location) {\n                this.http = $http;\n                this.location = $location;\n                this.apiUrl = UCF_DEGREE_SEARCH_ANGULAR.remote_path;\n            }\n            DegreeService.prototype.GetDegreeResults = function (query, args, successCallback, errorCallback) {\n                var params = {\n                    search: query,\n                    program_types: args.programType,\n                    page: args.page ? args.page : 1\n                };\n\n                this.http.get(this.apiUrl, { params: params }).then(function (response) {\n                    successCallback(response);\n                }, function (response) {\n                    errorCallback(response);\n                });\n            };\n\n            DegreeService.prototype.GetProgramTypes = function (successCallback, errorCallback) {\n                this.http.get(this.apiUrl + '/program-types').then(function (response) {\n                    successCallback(response);\n                }, function (response) {\n                    errorCallback(response);\n                });\n            };\n            DegreeService.$inject = ['$http', '$location'];\n            return DegreeService;\n        })();\n        Services.DegreeService = DegreeService;\n    })(DegreeSearch.Services || (DegreeSearch.Services = {}));\n    var Services = DegreeSearch.Services;\n})(DegreeSearch || (DegreeSearch = {}));\n","var DegreeSearch;\n(function (DegreeSearch) {\n    (function (Controllers) {\n        var MainController = (function () {\n            function MainController($scope, $location, degreeService) {\n                var _this = this;\n                this.scope = $scope;\n                this.location = $location;\n                this.degreeService = degreeService;\n\n                this.scope.programTypes = [\n                    {\n                        slug: 'undergraduate-degree',\n                        alias: 'Majors'\n                    },\n                    {\n                        slug: 'minor',\n                        alias: 'Minors'\n                    },\n                    {\n                        slug: 'graduate-degree',\n                        alias: 'Graduate Degrees'\n                    },\n                    {\n                        slug: 'certificate',\n                        alias: 'Certificates'\n                    },\n                    {\n                        slug: 'articulated-program',\n                        alias: 'Articulated Programs'\n                    },\n                    {\n                        slug: 'accelerated-program',\n                        alias: 'Accelerated Programs'\n                    }\n                ];\n\n                this.scope.$watch('mainCtl.searchQuery', function (query) {\n                    _this.HandleInput(query);\n                });\n            }\n            MainController.prototype.GetSearchResults = function () {\n                var _this = this;\n                this.degreeService.GetDegreeResults(this.searchQuery, {\n                    programType: this.programType,\n                    page: this.currentPage\n                }, function (response) {\n                    _this.SuccessHandler(response);\n                }, function (response) {\n                    _this.ErrorHandler(response);\n                });\n            };\n\n            MainController.prototype.SuccessHandler = function (response) {\n                var _this = this;\n                this.results = response.data;\n                this.totalResults = this.results.totalPosts;\n                this.currentPage = this.results.currentPage;\n                this.totalPages = this.results.totalPages;\n                this.startIndex = this.results.startIndex;\n                this.endIndex = this.results.endIndex;\n\n                angular.forEach(this.results.types, function (type_val, type_key) {\n                    angular.forEach(_this.scope.programTypes, function (pt_val, pt_key) {\n                        if (type_key === pt_val.slug) {\n                            _this.scope.programTypes[pt_key].count = '(' + type_val.count + ')';\n                        }\n                    });\n                });\n            };\n\n            MainController.prototype.ErrorHandler = function (response) {\n            };\n\n            MainController.prototype.HandleInput = function (query) {\n                this.searchQuery = query;\n                this.currentPage = 1;\n                this.GetSearchResults();\n            };\n\n            MainController.prototype.PreviousPage = function () {\n                this.currentPage--;\n\n                if (this.currentPage < 1) {\n                    this.currentPage = 1;\n                } else {\n                    this.GetSearchResults();\n                }\n            };\n\n            MainController.prototype.NextPage = function () {\n                this.currentPage++;\n\n                if (this.currentPage <= this.totalPages) {\n                    this.GetSearchResults();\n                } else {\n                    this.currentPage--;\n                }\n            };\n\n            MainController.prototype.GoToPage = function (page) {\n                if (page >= 1 && page <= this.totalPages) {\n                    console.log('valid page');\n                    this.currentPage = page;\n                    this.GetSearchResults();\n                }\n            };\n\n            MainController.prototype.UpdateFilters = function (value) {\n                this.programType = value;\n                this.GetSearchResults();\n            };\n            MainController.$inject = ['$scope', '$location', 'DegreeService'];\n            return MainController;\n        })();\n        Controllers.MainController = MainController;\n    })(DegreeSearch.Controllers || (DegreeSearch.Controllers = {}));\n    var Controllers = DegreeSearch.Controllers;\n})(DegreeSearch || (DegreeSearch = {}));\n","var DegreeSearch;\n(function (DegreeSearch) {\n    (function (Directives) {\n        function SearchFormDirective() {\n            return {\n                restrict: 'E',\n                replace: true,\n                template: UCF_DEGREE_SEARCH_ANGULAR.search_form_template\n            };\n        }\n        Directives.SearchFormDirective = SearchFormDirective;\n\n        function SearchResultsDirective() {\n            return {\n                restrict: 'E',\n                replace: true,\n                template: UCF_DEGREE_SEARCH_ANGULAR.search_results_template\n            };\n        }\n        Directives.SearchResultsDirective = SearchResultsDirective;\n\n        function ProgramTypesDirective() {\n            return {\n                restrict: 'E',\n                replace: true,\n                template: UCF_DEGREE_SEARCH_ANGULAR.program_types_template\n            };\n        }\n        Directives.ProgramTypesDirective = ProgramTypesDirective;\n\n        function PaginationDirective() {\n            return {\n                restrict: 'E',\n                replace: true,\n                template: UCF_DEGREE_SEARCH_ANGULAR.pagination_template\n            };\n        }\n        Directives.PaginationDirective = PaginationDirective;\n\n        function ResultCountDirective() {\n            return {\n                restrict: 'E',\n                replace: true,\n                template: UCF_DEGREE_SEARCH_ANGULAR.result_count_template\n            };\n        }\n        Directives.ResultCountDirective = ResultCountDirective;\n    })(DegreeSearch.Directives || (DegreeSearch.Directives = {}));\n    var Directives = DegreeSearch.Directives;\n})(DegreeSearch || (DegreeSearch = {}));\n","angular.module('DegreeSearchApp', []);\n\nangular.module('DegreeSearchApp').controller('MainController', DegreeSearch.Controllers.MainController);\n\nangular.module('DegreeSearchApp').service('DegreeService', DegreeSearch.Services.DegreeService);\n\nangular.module('DegreeSearchApp').directive('searchForm', DegreeSearch.Directives.SearchFormDirective);\nangular.module('DegreeSearchApp').directive('searchResults', DegreeSearch.Directives.SearchResultsDirective);\nangular.module('DegreeSearchApp').directive('programTypeFilters', DegreeSearch.Directives.ProgramTypesDirective);\nangular.module('DegreeSearchApp').directive('pagination', DegreeSearch.Directives.PaginationDirective);\nangular.module('DegreeSearchApp').directive('resultCount', DegreeSearch.Directives.ResultCountDirective);\n\nangular.module('DegreeSearchApp').filter('range', DegreeSearch.Filters.RangeFilter);\n"]}