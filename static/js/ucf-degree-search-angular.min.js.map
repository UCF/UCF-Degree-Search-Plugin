{"version":3,"sources":["filters.js","degreeservice.js","maincontroller.js","degreedirectives.js","app.js"],"names":["DegreeSearch","Filters","RangeFilter","input","total","i","push","Services","DegreeService","$http","$location","this","http","location","apiUrl","UCF_DEGREE_SEARCH_ANGULAR","remote_path","prototype","GetDegreeResults","query","args","successCallback","errorCallback","params","search","program_types","programType","page","get","then","response","GetProgramTypes","$inject","Controllers","MainController","$scope","degreeService","_this","scope","searchQuery","programTypes","data","Array","ParsePath","$watch","HandleInput","GetSearchResults","totalResults","selectedProgramType","currentPage","SuccessHandler","ErrorHandler","results","totalPosts","totalPages","startIndex","endIndex","BuildLocation","PreviousPage","NextPage","GoToPage","UpdateFilters","value","path","pathSplit","split","length","Directives","SearchFormDirective","restrict","replace","template","search_form_template","SearchResultsDirective","search_results_template","ProgramTypesDirective","program_types_template","PaginationDirective","pagination_template","ResultCountDirective","result_count_template","LoadingDirective","loading_template","NoResultsDirective","no_results_template","angular","module","controller","service","directive","filter"],"mappings":"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","file":"ucf-degree-search-angular.min.js","sourcesContent":["var DegreeSearch;\n(function (DegreeSearch) {\n    (function (Filters) {\n        function RangeFilter() {\n            return function (input, total) {\n                total = total;\n\n                for (var i = 0; i < total; i++) {\n                    input.push(i);\n                }\n\n                return input;\n            };\n        }\n        Filters.RangeFilter = RangeFilter;\n    })(DegreeSearch.Filters || (DegreeSearch.Filters = {}));\n    var Filters = DegreeSearch.Filters;\n})(DegreeSearch || (DegreeSearch = {}));\n","var DegreeSearch;\n(function (DegreeSearch) {\n    (function (Services) {\n        var DegreeService = (function () {\n            function DegreeService($http, $location) {\n                this.http = $http;\n                this.location = $location;\n                this.apiUrl = UCF_DEGREE_SEARCH_ANGULAR.remote_path;\n            }\n            DegreeService.prototype.GetDegreeResults = function (query, args, successCallback, errorCallback) {\n                var params = {\n                    search: query,\n                    program_types: args.programType,\n                    page: args.page ? args.page : 1\n                };\n\n                this.http.get(this.apiUrl, { params: params }).then(function (response) {\n                    successCallback(response);\n                }, function (response) {\n                    errorCallback(response);\n                });\n            };\n\n            DegreeService.prototype.GetProgramTypes = function (successCallback, errorCallback) {\n                this.http.get(this.apiUrl + '/program-types').then(function (response) {\n                    successCallback(response);\n                }, function (response) {\n                    errorCallback(response);\n                });\n            };\n            DegreeService.$inject = ['$http', '$location'];\n            return DegreeService;\n        })();\n        Services.DegreeService = DegreeService;\n    })(DegreeSearch.Services || (DegreeSearch.Services = {}));\n    var Services = DegreeSearch.Services;\n})(DegreeSearch || (DegreeSearch = {}));\n","var DegreeSearch;\n(function (DegreeSearch) {\n    (function (Controllers) {\n        var MainController = (function () {\n            function MainController($scope, $location, degreeService) {\n                var _this = this;\n                this.scope = $scope;\n                this.location = $location;\n                this.degreeService = degreeService;\n                this.searchQuery = '';\n\n                this.degreeService.GetProgramTypes(function (response) {\n                    _this.programTypes = response.data;\n                }, function (response) {\n                    _this.programTypes = Array();\n                });\n\n                this.ParsePath();\n\n                this.scope.$watch('mainCtl.searchQuery', function (query) {\n                    _this.HandleInput(query);\n                });\n            }\n            MainController.prototype.GetSearchResults = function () {\n                var _this = this;\n                this.totalResults = null;\n\n                var programType = this.selectedProgramType === 'all' ? '' : this.selectedProgramType;\n\n                this.degreeService.GetDegreeResults(this.searchQuery, {\n                    programType: programType,\n                    page: this.currentPage\n                }, function (response) {\n                    _this.SuccessHandler(response);\n                }, function (response) {\n                    _this.ErrorHandler(response);\n                });\n            };\n\n            MainController.prototype.SuccessHandler = function (response) {\n                this.results = response.data;\n                this.totalResults = this.results.totalPosts;\n                this.currentPage = this.results.currentPage;\n                this.totalPages = this.results.totalPages;\n                this.startIndex = this.results.startIndex;\n                this.endIndex = this.results.endIndex;\n            };\n\n            MainController.prototype.ErrorHandler = function (response) {\n            };\n\n            MainController.prototype.HandleInput = function (query) {\n                this.searchQuery = query;\n                this.currentPage = 1;\n                this.BuildLocation();\n                this.GetSearchResults();\n            };\n\n            MainController.prototype.PreviousPage = function () {\n                this.currentPage--;\n\n                if (this.currentPage < 1) {\n                    this.currentPage = 1;\n                } else {\n                    this.GetSearchResults();\n                }\n            };\n\n            MainController.prototype.NextPage = function () {\n                this.currentPage++;\n\n                if (this.currentPage <= this.totalPages) {\n                    this.GetSearchResults();\n                } else {\n                    this.currentPage--;\n                }\n            };\n\n            MainController.prototype.GoToPage = function (page) {\n                if (page >= 1 && page <= this.totalPages) {\n                    this.currentPage = page;\n                    this.GetSearchResults();\n                }\n            };\n\n            MainController.prototype.UpdateFilters = function (value) {\n                this.selectedProgramType = value;\n                this.currentPage = 1;\n                this.BuildLocation();\n                this.GetSearchResults();\n            };\n\n            MainController.prototype.ParsePath = function () {\n                var path = this.location.path(), pathSplit = path.split('/');\n\n                if (pathSplit[1] === 'search') {\n                    this.searchQuery = pathSplit[2];\n                } else {\n                    this.selectedProgramType = pathSplit[1];\n\n                    if (pathSplit.length > 3) {\n                        this.searchQuery = pathSplit[3];\n                    }\n                }\n            };\n\n            MainController.prototype.BuildLocation = function () {\n                var path = '';\n                if (this.selectedProgramType) {\n                    path += this.selectedProgramType;\n                }\n\n                if (this.searchQuery) {\n                    path += '/search/' + this.searchQuery;\n                }\n\n                this.location.path(path);\n            };\n            MainController.$inject = ['$scope', '$location', 'DegreeService'];\n            return MainController;\n        })();\n        Controllers.MainController = MainController;\n    })(DegreeSearch.Controllers || (DegreeSearch.Controllers = {}));\n    var Controllers = DegreeSearch.Controllers;\n})(DegreeSearch || (DegreeSearch = {}));\n","var DegreeSearch;\n(function (DegreeSearch) {\n    (function (Directives) {\n        function SearchFormDirective() {\n            return {\n                restrict: 'E',\n                replace: true,\n                template: UCF_DEGREE_SEARCH_ANGULAR.search_form_template\n            };\n        }\n        Directives.SearchFormDirective = SearchFormDirective;\n\n        function SearchResultsDirective() {\n            return {\n                restrict: 'E',\n                replace: true,\n                template: UCF_DEGREE_SEARCH_ANGULAR.search_results_template\n            };\n        }\n        Directives.SearchResultsDirective = SearchResultsDirective;\n\n        function ProgramTypesDirective() {\n            return {\n                restrict: 'E',\n                replace: true,\n                template: UCF_DEGREE_SEARCH_ANGULAR.program_types_template\n            };\n        }\n        Directives.ProgramTypesDirective = ProgramTypesDirective;\n\n        function PaginationDirective() {\n            return {\n                restrict: 'E',\n                replace: true,\n                template: UCF_DEGREE_SEARCH_ANGULAR.pagination_template\n            };\n        }\n        Directives.PaginationDirective = PaginationDirective;\n\n        function ResultCountDirective() {\n            return {\n                restrict: 'E',\n                replace: true,\n                template: UCF_DEGREE_SEARCH_ANGULAR.result_count_template\n            };\n        }\n        Directives.ResultCountDirective = ResultCountDirective;\n\n        function LoadingDirective() {\n            return {\n                restrict: 'E',\n                replace: true,\n                template: UCF_DEGREE_SEARCH_ANGULAR.loading_template\n            };\n        }\n        Directives.LoadingDirective = LoadingDirective;\n\n        function NoResultsDirective() {\n            return {\n                restrict: 'E',\n                replace: true,\n                template: UCF_DEGREE_SEARCH_ANGULAR.no_results_template\n            };\n        }\n        Directives.NoResultsDirective = NoResultsDirective;\n    })(DegreeSearch.Directives || (DegreeSearch.Directives = {}));\n    var Directives = DegreeSearch.Directives;\n})(DegreeSearch || (DegreeSearch = {}));\n","angular.module('DegreeSearchApp', []);\n\nangular.module('DegreeSearchApp').controller('MainController', DegreeSearch.Controllers.MainController);\n\nangular.module('DegreeSearchApp').service('DegreeService', DegreeSearch.Services.DegreeService);\n\nangular.module('DegreeSearchApp').directive('searchForm', DegreeSearch.Directives.SearchFormDirective);\nangular.module('DegreeSearchApp').directive('searchResults', DegreeSearch.Directives.SearchResultsDirective);\nangular.module('DegreeSearchApp').directive('programTypeFilters', DegreeSearch.Directives.ProgramTypesDirective);\nangular.module('DegreeSearchApp').directive('pagination', DegreeSearch.Directives.PaginationDirective);\nangular.module('DegreeSearchApp').directive('resultCount', DegreeSearch.Directives.ResultCountDirective);\nangular.module('DegreeSearchApp').directive('loading', DegreeSearch.Directives.LoadingDirective);\nangular.module('DegreeSearchApp').directive('noResults', DegreeSearch.Directives.NoResultsDirective);\n\nangular.module('DegreeSearchApp').filter('range', DegreeSearch.Filters.RangeFilter);\n"]}