{"version":3,"sources":["handlebar-helpers.js","degreeservice.js","maincontroller.js","programcontroller.js","collegecontroller.js","degreedirectives.js","encodingfilter.js","app.js"],"names":["stripDegree","input","replace","capitalize","splitInput","split","retval","exceptions","forEach","s","i","length","charAt","toUpperCase","substr","toLowerCase","indexOf","join","Handlebars","registerHelper","DegreeSearch","Services","DegreeService","$http","$location","this","http","location","apiUrl","UCF_DEGREE_SEARCH_ANGULAR","remote_path","limit","prototype","getDegreeResults","query","args","successCallback","errorCallback","params","search","colleges","college","program_types","programType","page","get","then","response","getProgramTypes","getProgramTypesCounts","getColleges","getCollegesCounts","$inject","Controllers","MainController","$scope","degreeService","_this","scope","pages","Array","routeRegExps","program","hasFilters","updateHeading","update_heading","updateTitle","update_title","setTimeout","init","registerRoute","setDefaults","parsePath","$heading","$","$watch","newValue","oldValue","handleInput","getSearchResults","totalResults","selectedProgramType","selectedCollege","searchQuery","currentPage","successHandler","errorHandler","results","data","totalPosts","totalPages","startIndex","endIndex","buildLocation","buildResultMessage","pagination","googleDataLayerUpdate","setHeading","setTitle","resultMessage","setWpSpeak","selectedProgramTypeDisplay","selectedCollegeDisplay","message","wp","a11y","speak","headingTemplate","heading_template","headingFn","compile","html","titleTemplate","title_template","titleFn","document","title","newVal","oldVal","previousPage","nextPage","goToPage","RegExp","default_program_type","default_college","enabled_routes","enabledRoutes","route","URLSearchParams","path","matches","exec","has","find","x","slug","fullname","selected","parent","type","match","children","c","selectedParentProgramType","name","pagePad","innerWidth","startPage","endPage","push","dataLayer","event","degreeSearchTerm","degreeSearchProgramTypes","degreeSearchCollege","ProgramController","mainCtl","$parent","programTypes","registerRoutes","programSlugs","child","onClear","onSelected","value","CollegeController","Directives","searchFormDirective","restrict","template","atts","search_form_template","placeholder","searchResultsDirective","search_results_template","programTypesDirective","program_types_template","collegesDirective","colleges_template","paginationDirective","pagination_template","resultCountDirective","result_count_template","loadingDirective","loading_template","noResultsDirective","no_results_template","Filters","convertEncoding","text","app","angular","module","config","$locationProvider","html5Mode","controller","service","directive","filter"],"mappings":"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","file":"ucf-degree-search-angular.min.js","sourcesContent":["if (typeof Handlebars !== 'undefined') {\n    function stripDegree(input) {\n        return input.replace(' Degree', '').replace(' Degrees', '').replace('Program', '').replace('Programs', '');\n    }\n\n    function capitalize(input) {\n        var splitInput = input.split(' '), retval = [], exceptions = ['a', 'an', 'the', 'at', 'by', 'for', 'in', 'of', 'on', 'to', 'up', 'and', 'as', 'but', 'or', 'nor'];\n\n        splitInput.forEach(function (s, i) {\n            // Capitalize first and last always\n            if (i === 0 || i === splitInput.length - 1) {\n                retval[i] = s.charAt(0).toUpperCase() + s.substr(1).toLowerCase();\n            } else {\n                // If it's not an exception, capitalize it\n                if (exceptions.indexOf(s) === -1) {\n                    retval[i] = s.charAt(0).toUpperCase() + s.substr(1).toLowerCase();\n                } else {\n                    retval[i] = s;\n                }\n            }\n        });\n\n        return retval.join(' ');\n    }\n\n    Handlebars.registerHelper('stripDegree', stripDegree);\n    Handlebars.registerHelper('capitalize', capitalize);\n}\n","var DegreeSearch;\n(function (DegreeSearch) {\n    (function (Services) {\n        var DegreeService = (function () {\n            function DegreeService($http, $location) {\n                this.http = $http;\n                this.location = $location;\n                this.apiUrl = UCF_DEGREE_SEARCH_ANGULAR.remote_path;\n                this.limit = UCF_DEGREE_SEARCH_ANGULAR.limit;\n            }\n            DegreeService.prototype.getDegreeResults = function (query, args, successCallback, errorCallback) {\n                var params = {\n                    search: query,\n                    colleges: args.college,\n                    program_types: args.programType,\n                    page: args.page ? args.page : 1,\n                    limit: args.limit ? args.limit : this.limit\n                };\n\n                this.http.get(this.apiUrl + '/degrees', { params: params }).then(function (response) {\n                    successCallback(response);\n                }, function (response) {\n                    errorCallback(response);\n                });\n            };\n\n            DegreeService.prototype.getProgramTypes = function (successCallback, errorCallback) {\n                this.http.get(this.apiUrl + '/program-types').then(function (response) {\n                    successCallback(response);\n                }, function (response) {\n                    errorCallback(response);\n                });\n            };\n\n            DegreeService.prototype.getProgramTypesCounts = function (query, college, successCallback, errorCallback) {\n                var params = {\n                    search: query,\n                    colleges: college\n                };\n\n                params.colleges = params.colleges === 'all' ? '' : params.colleges;\n\n                this.http.get(this.apiUrl + '/program-types/counts', { params: params }).then(function (response) {\n                    successCallback(response);\n                }, function (response) {\n                    errorCallback(response);\n                });\n            };\n\n            DegreeService.prototype.getColleges = function (successCallback, errorCallback) {\n                this.http.get(this.apiUrl + '/colleges').then(function (response) {\n                    successCallback(response);\n                }, function (response) {\n                    errorCallback(response);\n                });\n            };\n\n            DegreeService.prototype.getCollegesCounts = function (query, programType, successCallback, errorCallback) {\n                var params = {\n                    search: query,\n                    program_types: programType\n                };\n\n                params.program_types = params.program_types === 'all' ? '' : params.program_types;\n\n                this.http.get(this.apiUrl + '/colleges/counts', { params: params }).then(function (response) {\n                    successCallback(response);\n                }, function (response) {\n                    errorCallback(response);\n                });\n            };\n            DegreeService.$inject = ['$http', '$location'];\n            return DegreeService;\n        })();\n        Services.DegreeService = DegreeService;\n    })(DegreeSearch.Services || (DegreeSearch.Services = {}));\n    var Services = DegreeSearch.Services;\n})(DegreeSearch || (DegreeSearch = {}));\n","var DegreeSearch;\n(function (DegreeSearch) {\n    (function (Controllers) {\n        var MainController = (function () {\n            function MainController($scope, $location, degreeService) {\n                var _this = this;\n                this.scope = $scope;\n                this.location = $location;\n                this.degreeService = degreeService;\n                this.pages = new Array();\n                this.routeRegExps = {\n                    college: null,\n                    program: null,\n                    search: null\n                };\n                this.hasFilters = false;\n\n                this.updateHeading = UCF_DEGREE_SEARCH_ANGULAR.update_heading;\n                this.updateTitle = UCF_DEGREE_SEARCH_ANGULAR.update_title;\n\n                setTimeout(function () {\n                    _this.init();\n                }, 0);\n            }\n            MainController.prototype.init = function () {\n                var _this = this;\n                this.registerRoute();\n                this.setDefaults();\n                this.parsePath();\n\n                if (this.updateHeading) {\n                    this.$heading = $('h1');\n                }\n                this.scope.$watch('mainCtl.searchQuery', function (newValue, oldValue) {\n                    _this.handleInput(newValue, oldValue);\n                });\n                this.getSearchResults();\n            };\n\n            MainController.prototype.getSearchResults = function () {\n                var _this = this;\n                this.totalResults = null;\n\n                var programType = this.selectedProgramType === 'all' ? '' : this.selectedProgramType;\n                var college = this.selectedCollege === 'all' ? '' : this.selectedCollege;\n\n                if (this.searchQuery || this.selectedProgramType || this.selectedCollege) {\n                    this.hasFilters = true;\n                } else {\n                    this.hasFilters = false;\n                }\n\n                this.degreeService.getDegreeResults(this.searchQuery, {\n                    college: college,\n                    page: this.currentPage,\n                    programType: programType\n                }, function (response) {\n                    _this.successHandler(response);\n                }, function (response) {\n                    _this.errorHandler(response);\n                });\n            };\n\n            MainController.prototype.successHandler = function (response) {\n                this.results = response.data;\n                this.totalResults = this.results.totalPosts;\n                this.currentPage = this.results.currentPage;\n                this.totalPages = this.results.totalPages;\n                this.startIndex = this.results.startIndex;\n                this.endIndex = this.results.endIndex;\n                this.buildLocation();\n                this.buildResultMessage();\n                this.pagination();\n                this.googleDataLayerUpdate();\n\n                if (this.updateHeading) {\n                    this.setHeading();\n                }\n\n                if (this.updateTitle) {\n                    this.setTitle();\n                }\n            };\n\n            MainController.prototype.errorHandler = function (response) {\n                this.results = {};\n            };\n\n            MainController.prototype.buildResultMessage = function () {\n                if (this.totalResults === 0) {\n                    this.resultMessage = '';\n                    this.setWpSpeak(\"No results found for \" + this.searchQuery);\n                } else {\n                    this.resultMessage = \"Showing \" + this.startIndex + \" through \" + this.endIndex + \" of \" + this.totalResults + \" results\";\n\n                    if (this.searchQuery && this.searchQuery !== '') {\n                        this.resultMessage += \" for \" + this.searchQuery;\n                    }\n\n                    if (this.selectedProgramType && this.selectedProgramType !== 'all') {\n                        this.resultMessage += \" in \" + this.selectedProgramTypeDisplay;\n                    }\n\n                    if (this.selectedCollege && this.selectedCollege !== 'all') {\n                        this.resultMessage += \" at the \" + this.selectedCollegeDisplay;\n                    }\n\n                    this.resultMessage += \" at UCF.\";\n\n                    this.setWpSpeak(this.resultMessage);\n                }\n            };\n\n            MainController.prototype.setWpSpeak = function (message) {\n                wp.a11y.speak(message);\n            };\n\n            MainController.prototype.setHeading = function () {\n                var headingTemplate = UCF_DEGREE_SEARCH_ANGULAR.heading_template, headingFn = Handlebars.compile(headingTemplate);\n\n                this.$heading.html(headingFn(this));\n            };\n\n            MainController.prototype.setTitle = function () {\n                var titleTemplate = UCF_DEGREE_SEARCH_ANGULAR.title_template, titleFn = Handlebars.compile(titleTemplate);\n\n                document.title = titleFn(this);\n            };\n\n            MainController.prototype.handleInput = function (newVal, oldVal) {\n                if (newVal === oldVal) {\n                    return;\n                }\n\n                this.searchQuery = newVal;\n                this.currentPage = 1;\n                this.buildLocation();\n                this.getSearchResults();\n            };\n\n            MainController.prototype.previousPage = function () {\n                this.currentPage--;\n\n                if (this.currentPage < 1) {\n                    this.currentPage = 1;\n                } else {\n                    this.getSearchResults();\n                }\n            };\n\n            MainController.prototype.nextPage = function () {\n                this.currentPage++;\n\n                if (this.currentPage <= this.totalPages) {\n                    this.getSearchResults();\n                } else {\n                    this.currentPage--;\n                }\n            };\n\n            MainController.prototype.goToPage = function (page) {\n                if (page >= 1 && page <= this.totalPages) {\n                    this.currentPage = page;\n                    this.getSearchResults();\n                }\n            };\n\n            MainController.prototype.registerRoute = function () {\n                this.routeRegExps.search = new RegExp('\\/search\\/([\\\\w\\\\s]*)\\/?');\n            };\n\n            MainController.prototype.setDefaults = function () {\n                var _this = this;\n                if (UCF_DEGREE_SEARCH_ANGULAR.default_program_type) {\n                    this.selectedProgramType = UCF_DEGREE_SEARCH_ANGULAR.default_program_type;\n                }\n\n                if (UCF_DEGREE_SEARCH_ANGULAR.default_college) {\n                    this.selectedCollege = UCF_DEGREE_SEARCH_ANGULAR.default_college;\n                }\n\n                if (UCF_DEGREE_SEARCH_ANGULAR.enabled_routes) {\n                    // Set defaults.\n                    this.enabledRoutes = {\n                        college: false,\n                        program: false,\n                        search: false\n                    };\n\n                    UCF_DEGREE_SEARCH_ANGULAR.enabled_routes.forEach(function (route) {\n                        _this.enabledRoutes[route] = true;\n                    });\n                } else {\n                    this.enabledRoutes = {\n                        college: true,\n                        program: true,\n                        search: true\n                    };\n                }\n            };\n\n            MainController.prototype.parsePath = function () {\n                var _this = this;\n                // Parse query params\n                var params = new URLSearchParams(location.search);\n\n                var path = this.location.path();\n\n                if (this.enabledRoutes.college && this.routeRegExps.college) {\n                    var matches = this.routeRegExps.college.exec(path);\n                    if (matches) {\n                        this.selectedCollege = matches[1];\n                    } else if (params.has('college[0]')) {\n                        this.selectedCollege = params.get('college[0]');\n                    } else if (params.has('colleges')) {\n                        this.selectedCollege = params.get('colleges');\n                    }\n\n                    if (this.selectedCollege) {\n                        var college = UCF_DEGREE_SEARCH_ANGULAR.colleges.find(function (x) {\n                            return x.slug == _this.selectedCollege;\n                        });\n                        if (college) {\n                            this.selectedCollegeDisplay = college.fullname;\n                        }\n                    }\n                }\n\n                if (this.enabledRoutes.program && this.routeRegExps.program) {\n                    var matches = this.routeRegExps.program.exec(path);\n                    if (matches) {\n                        this.selectedProgramType = matches[1];\n                    } else if (params.has('program-type[0]')) {\n                        this.selectedProgramType = params.get('program-type[0]');\n                    } else if (params.has('program_types')) {\n                        this.selectedProgramType = params.get('program_types');\n                    }\n\n                    if (this.selectedProgramType) {\n                        var selected = UCF_DEGREE_SEARCH_ANGULAR.program_types.find(function (x) {\n                            return x.slug === _this.selectedProgramType;\n                        });\n                        var parent = null;\n\n                        if (!selected) {\n                            UCF_DEGREE_SEARCH_ANGULAR.program_types.forEach(function (type) {\n                                var match = type.children.find(function (c) {\n                                    return c.slug === _this.selectedProgramType;\n                                });\n\n                                if (match) {\n                                    selected = match;\n                                    parent = type;\n                                }\n                            });\n                        } else {\n                            parent = selected;\n                        }\n\n                        this.selectedParentProgramType = parent.slug;\n                        this.selectedProgramTypeDisplay = selected.name;\n                    }\n\n                    this.location.search({});\n                }\n\n                if (this.enabledRoutes.search && this.routeRegExps.search) {\n                    var matches = this.routeRegExps.search.exec(path);\n                    if (matches) {\n                        this.searchQuery = matches[1];\n                    } else if (params.has('search')) {\n                        this.searchQuery = params.get('search');\n                    }\n                }\n\n                this.location.search({});\n            };\n\n            MainController.prototype.buildLocation = function () {\n                var path = '/';\n\n                if (this.selectedCollege && this.enabledRoutes.college && this.selectedCollege !== 'all') {\n                    path += 'college/' + this.selectedCollege + '/';\n                }\n\n                if (this.selectedProgramType && this.enabledRoutes.program && this.selectedProgramType !== 'all') {\n                    path += this.selectedProgramType + '/';\n                }\n\n                if (this.searchQuery && this.enabledRoutes.search) {\n                    path += 'search/' + this.searchQuery + '/';\n                }\n\n                this.location.path(path);\n            };\n\n            MainController.prototype.pagination = function () {\n                var pagePad = $(document).innerWidth() < 768 ? 2 : 4;\n\n                var startPage = this.currentPage - pagePad < 1 ? 1 : this.currentPage - pagePad;\n                var endPage = this.currentPage + pagePad > this.totalPages ? this.totalPages : this.currentPage + pagePad;\n\n                // Reset the array\n                this.pages = new Array();\n\n                for (var i = startPage; i <= endPage; i++) {\n                    this.pages.push(i);\n                }\n            };\n\n            MainController.prototype.googleDataLayerUpdate = function () {\n                if (typeof dataLayer !== 'undefined') {\n                    dataLayer.push({\n                        'event': 'degreeSearchFilterChange',\n                        'degreeSearchTerm': this.searchQuery,\n                        'degreeSearchProgramTypes': this.selectedProgramType,\n                        'degreeSearchCollege': this.selectedCollege\n                    });\n                }\n            };\n            MainController.$inject = ['$scope', '$location', 'DegreeService'];\n            return MainController;\n        })();\n        Controllers.MainController = MainController;\n    })(DegreeSearch.Controllers || (DegreeSearch.Controllers = {}));\n    var Controllers = DegreeSearch.Controllers;\n})(DegreeSearch || (DegreeSearch = {}));\n","var DegreeSearch;\n(function (DegreeSearch) {\n    (function (Controllers) {\n        var ProgramController = (function () {\n            function ProgramController($scope, degreeService) {\n                this.scope = $scope;\n                this.degreeService = degreeService;\n                this.mainCtl = this.scope.$parent.mainCtl;\n                this.programTypes = new Array();\n            }\n            ProgramController.prototype.init = function () {\n                if (UCF_DEGREE_SEARCH_ANGULAR.program_types) {\n                    this.programTypes = UCF_DEGREE_SEARCH_ANGULAR.program_types;\n                }\n\n                this.registerRoutes();\n            };\n\n            ProgramController.prototype.registerRoutes = function () {\n                var programSlugs = new Array();\n\n                this.programTypes.forEach(function (type) {\n                    programSlugs.push(type.slug);\n\n                    if (type.children.length > 0) {\n                        type.children.forEach(function (child) {\n                            programSlugs.push(child.slug);\n                        });\n                    }\n                });\n\n                this.mainCtl.routeRegExps.program = new RegExp('\\/(' + programSlugs.join('|') + ')\\/?');\n            };\n\n            ProgramController.prototype.onClear = function () {\n                this.mainCtl.selectedProgramType = 'all';\n                this.mainCtl.selectedProgramTypeDisplay = '';\n                this.mainCtl.selectedParentProgramType = '';\n                this.mainCtl.currentPage = 1;\n                this.mainCtl.getSearchResults();\n            };\n\n            ProgramController.prototype.onSelected = function (value) {\n                var selected = this.programTypes.find(function (x) {\n                    return x.slug === value;\n                });\n                var parent = null;\n\n                if (!selected) {\n                    this.programTypes.forEach(function (type) {\n                        var match = type.children.find(function (c) {\n                            return c.slug === value;\n                        });\n\n                        if (match) {\n                            selected = match;\n                            parent = type;\n                        }\n                    });\n                } else {\n                    parent = selected;\n                }\n\n                this.mainCtl.selectedProgramType = selected.slug;\n                this.mainCtl.selectedProgramTypeDisplay = selected.name;\n                this.mainCtl.selectedParentProgramType = parent.slug;\n                this.mainCtl.currentPage = 1;\n                this.mainCtl.getSearchResults();\n            };\n            ProgramController.$inject = ['$scope', 'DegreeService'];\n            return ProgramController;\n        })();\n        Controllers.ProgramController = ProgramController;\n    })(DegreeSearch.Controllers || (DegreeSearch.Controllers = {}));\n    var Controllers = DegreeSearch.Controllers;\n})(DegreeSearch || (DegreeSearch = {}));\n","var DegreeSearch;\n(function (DegreeSearch) {\n    (function (Controllers) {\n        var CollegeController = (function () {\n            function CollegeController($scope, degreeService) {\n                this.scope = $scope;\n                this.degreeService = degreeService;\n                this.mainCtl = this.scope.$parent.mainCtl;\n                this.colleges = new Array();\n            }\n            CollegeController.prototype.init = function () {\n                if (UCF_DEGREE_SEARCH_ANGULAR.colleges) {\n                    this.colleges = UCF_DEGREE_SEARCH_ANGULAR.colleges;\n                }\n\n                this.registerRoutes();\n            };\n\n            CollegeController.prototype.registerRoutes = function () {\n                this.mainCtl.routeRegExps.college = new RegExp('\\/college\\/([a-zA-Z-_]*)\\/?');\n            };\n\n            CollegeController.prototype.onClear = function () {\n                this.mainCtl.selectedCollege = 'all';\n                this.mainCtl.selectedCollegeDisplay = '';\n                this.mainCtl.currentPage = 1;\n                this.mainCtl.getSearchResults();\n            };\n\n            CollegeController.prototype.onSelected = function (value) {\n                var selected = this.colleges.find(function (x) {\n                    return x.slug == value;\n                });\n                this.mainCtl.selectedCollege = selected.slug;\n                this.mainCtl.selectedCollegeDisplay = selected.fullname;\n                this.mainCtl.currentPage = 1;\n                this.mainCtl.getSearchResults();\n            };\n            CollegeController.$inject = ['$scope', 'DegreeService'];\n            return CollegeController;\n        })();\n        Controllers.CollegeController = CollegeController;\n    })(DegreeSearch.Controllers || (DegreeSearch.Controllers = {}));\n    var Controllers = DegreeSearch.Controllers;\n})(DegreeSearch || (DegreeSearch = {}));\n","var DegreeSearch;\n(function (DegreeSearch) {\n    (function (Directives) {\n        function searchFormDirective() {\n            return {\n                restrict: 'E',\n                replace: true,\n                template: function (scope, atts) {\n                    var retval = UCF_DEGREE_SEARCH_ANGULAR.search_form_template;\n                    if (atts.placeholder) {\n                        retval = retval.replace('{{atts.placeholder}}', atts.placeholder);\n                    }\n                    return retval;\n                }\n            };\n        }\n        Directives.searchFormDirective = searchFormDirective;\n\n        function searchResultsDirective() {\n            return {\n                restrict: 'E',\n                replace: true,\n                template: UCF_DEGREE_SEARCH_ANGULAR.search_results_template\n            };\n        }\n        Directives.searchResultsDirective = searchResultsDirective;\n\n        function programTypesDirective() {\n            return {\n                restrict: 'E',\n                replace: true,\n                template: UCF_DEGREE_SEARCH_ANGULAR.program_types_template\n            };\n        }\n        Directives.programTypesDirective = programTypesDirective;\n\n        function collegesDirective() {\n            return {\n                restrict: 'E',\n                replace: true,\n                template: UCF_DEGREE_SEARCH_ANGULAR.colleges_template\n            };\n        }\n        Directives.collegesDirective = collegesDirective;\n\n        function paginationDirective() {\n            return {\n                restrict: 'E',\n                replace: true,\n                template: UCF_DEGREE_SEARCH_ANGULAR.pagination_template\n            };\n        }\n        Directives.paginationDirective = paginationDirective;\n\n        function resultCountDirective() {\n            return {\n                restrict: 'E',\n                replace: true,\n                template: UCF_DEGREE_SEARCH_ANGULAR.result_count_template\n            };\n        }\n        Directives.resultCountDirective = resultCountDirective;\n\n        function loadingDirective() {\n            return {\n                restrict: 'E',\n                replace: true,\n                template: UCF_DEGREE_SEARCH_ANGULAR.loading_template\n            };\n        }\n        Directives.loadingDirective = loadingDirective;\n\n        function noResultsDirective() {\n            return {\n                restrict: 'E',\n                replace: true,\n                template: UCF_DEGREE_SEARCH_ANGULAR.no_results_template\n            };\n        }\n        Directives.noResultsDirective = noResultsDirective;\n    })(DegreeSearch.Directives || (DegreeSearch.Directives = {}));\n    var Directives = DegreeSearch.Directives;\n})(DegreeSearch || (DegreeSearch = {}));\n","var DegreeSearch;\n(function (DegreeSearch) {\n    (function (Filters) {\n        function convertEncoding() {\n            return function (input) {\n                return $('<span>').html(input).text();\n            };\n        }\n        Filters.convertEncoding = convertEncoding;\n    })(DegreeSearch.Filters || (DegreeSearch.Filters = {}));\n    var Filters = DegreeSearch.Filters;\n})(DegreeSearch || (DegreeSearch = {}));\n","var app = angular.module('DegreeSearchApp', []).config([\n    '$locationProvider', function ($locationProvider) {\n        $locationProvider.html5Mode(true);\n    }]);\n\nangular.module('DegreeSearchApp').controller('MainController', DegreeSearch.Controllers.MainController);\nangular.module('DegreeSearchApp').controller('ProgramController', DegreeSearch.Controllers.ProgramController);\nangular.module('DegreeSearchApp').controller('CollegeController', DegreeSearch.Controllers.CollegeController);\n\nangular.module('DegreeSearchApp').service('DegreeService', DegreeSearch.Services.DegreeService);\n\nangular.module('DegreeSearchApp').directive('searchForm', DegreeSearch.Directives.searchFormDirective);\nangular.module('DegreeSearchApp').directive('searchResults', DegreeSearch.Directives.searchResultsDirective);\nangular.module('DegreeSearchApp').directive('programTypeFilters', DegreeSearch.Directives.programTypesDirective);\nangular.module('DegreeSearchApp').directive('collegeFilters', DegreeSearch.Directives.collegesDirective);\nangular.module('DegreeSearchApp').directive('pagination', DegreeSearch.Directives.paginationDirective);\nangular.module('DegreeSearchApp').directive('resultCount', DegreeSearch.Directives.resultCountDirective);\nangular.module('DegreeSearchApp').directive('loading', DegreeSearch.Directives.loadingDirective);\nangular.module('DegreeSearchApp').directive('noResults', DegreeSearch.Directives.noResultsDirective);\n\nangular.module('DegreeSearchApp').filter('convertEncoding', DegreeSearch.Filters.convertEncoding);\n"]}